<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ContactInfoButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Default Style for Path's -->
    <Style TargetType="{x:Type Path}">

        <Setter Property="Stretch" Value="Uniform"/>
    </Style>

    <!-- Title's Buttons -->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="10">
                        <Viewbox Stretch="Uniform"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag.Width}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag.Height}">
                            <Path Data="{TemplateBinding Content}"
                                  Fill="{TemplateBinding Foreground}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  Style="{StaticResource {x:Type Path}}"/>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Убираем MultiTrigger, используем Trigger для IsMouseOver -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E0DFDE"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button for More Options -->
    <Style x:Key="ToggleIconButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="10">
                        <Viewbox Stretch="Uniform"
                                 Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag.Width}"
                                 Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag.Height}">
                            <Path Data="{TemplateBinding Content}"
                                  Fill="{TemplateBinding Foreground}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  Style="{StaticResource {x:Type Path}}"/>  
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E0DFDE"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TransparentListItem"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>