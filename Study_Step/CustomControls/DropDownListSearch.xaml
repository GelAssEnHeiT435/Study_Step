<UserControl x:Class="Study_Step.CustomControls.DropDownListSearch"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Study_Step.CustomControls"
             xmlns:viewmodels="clr-namespace:Study_Step.ViewModels"
             xmlns:commands="clr-namespace:Study_Step.Commands"
             mc:Ignorable="d"
             MinWidth="406">
    <StackPanel Orientation="Vertical">
        <ComboBox x:Name="SearchUser"
                  Width="400"
                  IsEditable="True"
                  IsTextSearchEnabled="True"
                  Background="Transparent" 
                  BorderBrush="Transparent" 
                  BorderThickness="0"
                  TextBoxBase.TextChanged="ComboBox_TextChanged"
                  ItemsSource="{Binding UserList}">
            <ComboBox.Template>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- Стрелочка, которая открывает выпадающий список -->
                        <ToggleButton x:Name="ToggleButton"
                                      Height="50" Width="50" Grid.Column="1"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Content="{StaticResource search}"
                                      Style="{StaticResource ToggleIconButtonStyle}">
                        </ToggleButton>

                        <!-- Поле для ввода текста -->
                        <TextBox x:Name="TextBox" 
                                 Height="50" Grid.Column="0" Margin="10, 0"
                                 HorizontalAlignment="Stretch"
                                 VerticalContentAlignment="Center"
                                 Background="Transparent"
                                 BorderBrush="Transparent"
                                 BorderThickness="0"
                                 Foreground="Black" 
                                 Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <!-- Popup для отображения выпадающего списка -->
                        <Popup x:Name="PART_Popup"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               Width="400"
                               Focusable="False"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
                            <Border x:Name="DropDownBorder"
                                    Background="White"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    CornerRadius="15">
                                <ListBox x:Name="ListBox" Margin="5"
                                         ItemTemplate="{TemplateBinding ItemTemplate}"
                                         ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                                         BorderBrush="Transparent">
                                    <ListBox.ItemContainerStyle>
                                        <!-- Переопределение стиля для элементов списка -->
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Padding="{TemplateBinding Padding}"
                                                                CornerRadius="15"
                                                                SnapsToDevicePixels="True">
                                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                                              SnapsToDevicePixels="True"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </ComboBox.Template>
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Button BorderThickness="0"
                            HorizontalAlignment="Center"
                            Command="{Binding DataContext.GetUserProfileCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                            CommandParameter="{Binding}">
                            
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/> <!-- Фотография пользователя -->
                                <ColumnDefinition Width="*"/> <!-- Имя пользователя -->
                            </Grid.ColumnDefinitions>

                            <Ellipse Width="40" Height="40" Grid.Column="0"
                                     Margin="15, 5">
                                <Ellipse.Fill>
                                    <ImageBrush Stretch="UniformToFill"
                                                ImageSource="{Binding Photo,
                                                                      FallbackValue='D:/my_works/dotnetProjects/Study_Step/Study_Step/Assets/Media/5.jpg',
                                                                      TargetNullValue='D:/my_works/dotnetProjects/Study_Step/Study_Step/Assets/Media/5.jpg',
                                                                      UpdateSourceTrigger=PropertyChanged}">
                                    </ImageBrush>
                                </Ellipse.Fill>
                            </Ellipse>

                            <TextBlock Grid.Column="1" Width="300"
                                       Text="{Binding Username}"
                                       FontSize="18" FontWeight="SemiBold"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"/>

                        </Grid>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <!-- Убираем MultiTrigger, используем Trigger для IsMouseOver -->
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#E0DFDE"/>
                                    </Trigger>
                                </Style.Triggers>

                                <!-- Начальное значение цвет (нельзя ставить исходному объекту данный параметр, чтобы работало -->
                                <Setter Property="Background" Value="Transparent"/>

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}"
                                                    CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
    </StackPanel>
</UserControl>
